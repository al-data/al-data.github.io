var WAVE_DB={};function loadDb(){var a=$.getJSON("../data/endb.json",function(a){WAVE_DB=new EnemyDB(a)});return Promise.all([a])}var WAVE_LIST=[],WAVE_DICT={};function loadWaves(a){WAVE_LIST=[],WAVE_DICT={};let b=a[5],c=loadDungeon(b),d=c[4],e=c[3],f=[];for(let b=0;b<e.length;b++){let c=e[b],g=d[c],h=new Wave(c,a[3]);h.fromData(g),g[1]==EWaveTriggerType.NORMAL&&h.isSubWave()?f.push(h):g[1]==EWaveTriggerType.NORMAL&&(h.idx=WAVE_LIST.length+1,WAVE_LIST.push(h)),WAVE_DICT[c]=h}for(let b,c=0;c<f.length;c++)b=f[c],b.idx=WAVE_LIST.length+1,WAVE_LIST.push(b);for(let b=0;b<WAVE_LIST.length;b++)WAVE_LIST[b].loadConditions(WAVE_DICT)}const TPL_TITLE=({chName:a,expedName:b})=>`<h1 class="hTitle">${a} \t ${b}</h1>`,TPL_HEADER=({text:a})=>`<h2>${a}</h2>`,TPL_SUB_HEADER=({text:a})=>`<h3>${a}</h3>`,ENEMY_TABLE_TMPL=({waveId:a,rows:b})=>`<table id="wave_${a}" class="table table-striped table-bordered dataTable no-footer" style="width:100%">
                    <thead>
                            <tr role="row">
                                <th class="sorting_asc" tabindex="0" aria-controls="dtBasicExample" rowspan="1" colspan="1" aria-sort="ascending" aria-label="Icon: activate to sort column descending" style="width: 27px;">Icon</th>
                                <th class="sorting" tabindex="0" aria-controls="dtBasicExample" rowspan="1" colspan="1" aria-label="Name: activate to sort column ascending" style="width: 101px;">
                                    <div style="width:100px;">Name</div>
                                </th>
                                <th class="sorting" tabindex="0" aria-controls="dtBasicExample" rowspan="1" colspan="1" aria-label=": activate to sort column ascending" style="width: 29px;">
                                    Type
                                </th>
                                <th class="sorting" tabindex="0" aria-controls="dtBasicExample" rowspan="1" colspan="1" aria-label="Level: activate to sort column ascending" style="width: 33px;">Level</th>
                                <th class="sorting" tabindex="0" aria-controls="dtBasicExample" rowspan="1" colspan="1" aria-label=": activate to sort column ascending" style="width: 29px;">
                                    <img src="img/attr/hp.png" style="width: 30px;">
                                </th>
                                <th class="sorting" tabindex="0" aria-controls="dtBasicExample" rowspan="1" colspan="1" aria-label=": activate to sort column ascending" style="width: 33px;">
                                    <img src="img/attr/armor.png" style="width: 30px;">
                                </th>
                                <th class="sorting" tabindex="0" aria-controls="dtBasicExample" rowspan="1" colspan="1" aria-label=": activate to sort column ascending" style="width: 29px;">
                                    <img src="img/attr/fp.png" style="width: 30px;">
                                </th>
                                <th class="sorting" tabindex="0" aria-controls="dtBasicExample" rowspan="1" colspan="1" aria-label=": activate to sort column ascending" style="width: 29px;">
                                    <img src="img/attr/torp.png" style="width: 30px;">
                                </th>
                                <th class="sorting" tabindex="0" aria-controls="dtBasicExample" rowspan="1" colspan="1" aria-label=": activate to sort column ascending" style="width: 29px;">
                                    <img src="img/attr/air.png" style="width: 30px;">
                                </th>
                                <th class="sorting" tabindex="0" aria-controls="dtBasicExample" rowspan="1" colspan="1" aria-label=": activate to sort column ascending" style="width: 29px;">
                                    <img src="img/attr/aa.png" style="width: 30px;">
                                </th>
                                <th class="sorting" tabindex="0" aria-controls="dtBasicExample" rowspan="1" colspan="1" aria-label=": activate to sort column ascending" style="width: 29px;">
                                    <img src="img/attr/eva.png" style="width: 30px;">
                                </th>
                                <th class="sorting" tabindex="0" aria-controls="dtBasicExample" rowspan="1" colspan="1" aria-label="Hit: activate to sort column ascending" style="width: 18px;">Hit</th>
                                <th class="sorting" tabindex="0" aria-controls="dtBasicExample" rowspan="1" colspan="1" aria-label="Luck: activate to sort column ascending" style="width: 30px;">Luck</th>
                                <th class="sorting" tabindex="0" aria-controls="dtBasicExample" rowspan="1" colspan="1" aria-label=" Priority: activate to sort column ascending" style="width: 69px;">
                                    <div style="">
                                        Prio
                                    </div>
                                </th>
                                <th class="sorting" tabindex="0" aria-controls="dtBasicExample" rowspan="1" colspan="1" aria-label="Notes: activate to sort column ascending" style="width: 74px;">
                                    <div style="width:60px;" >Notes</div>
                                </th>
                            </tr>
                    </thead>
                    <tbody>
                        ${b}
                        <!-- <tr role="row">
                            <td class="sorting_1">
                                <div style="width:40px; height:40px;">
                                    <img src="img/enemy-icons/birui.png" style="width:40px;">
                                </div>
                            </td>
                            <td>Hiei</td>
                            <td>60</td>
                            <td>7214</td>
                            <td>Medium</td>
                            <td>352</td>
                            <td>0</td>
                            <td>0</td>
                            <td>
                                <a href="#" class="material-tooltip-main" style="border-bottom: 1px dashed;" data-toggle="tooltip" title="56.14% air resistance">192</a>
                            </td>
                            <td>5</td>
                            <td>26</td>
                            <td>0</td>
                            <td>65</td>
                            <td>-</td>
                        </tr>
                        <tr role="row">
                            <td class="sorting_1">
                                <div style="width:40px; height:40px;">
                                    <img src="img/enemy-icons/ruihe.png" style="width:40px;">
                                </div>
                            </td>
                            <td>Zuikaku</td>
                            <td>60</td>
                            <td>5989</td>
                            <td>Medium</td>
                            <td>0</td>
                            <td>0</td>
                            <td>257</td>
                            <td>
                                <a href="#" class="material-tooltip-main" style="border-bottom: 1px dashed;" data-toggle="tooltip" title="57.51% air resistance">203</a>
                            </td>
                            <td>9</td>
                            <td>26</td>
                            <td>0</td>
                            <td>70</td>
                            <td>-</td>
                        </tr> -->
                    </tbody>
                </table>`,AIRCRAFT_TABLE_TMPL=({waveId:a,rows:b})=>`<table id="wave_${a}" class="table table-striped table-bordered dataTable no-footer" style="width:100%">
                    <thead>
                            <tr role="row">
                                <th class="sorting_asc" tabindex="0" aria-controls="dtBasicExample" rowspan="1" colspan="1" aria-sort="ascending" aria-label="Icon: activate to sort column descending" style="width: 27px;">Icon</th>
                                <th class="sorting" tabindex="0" aria-controls="dtBasicExample" rowspan="1" colspan="1" aria-label=": activate to sort column ascending" style="width: 29px;">
                                    Qty
                                </th>
                                <th class="sorting" tabindex="0" aria-controls="dtBasicExample" rowspan="1" colspan="1" aria-label="Level: activate to sort column ascending" style="width: 33px;">Level</th>
                                <th class="sorting" tabindex="0" aria-controls="dtBasicExample" rowspan="1" colspan="1" aria-label=": activate to sort column ascending" style="width: 29px;">
                                    <img src="img/attr/hp.png" style="width: 30px;">
                                </th>
                                <th class="sorting" tabindex="0" aria-controls="dtBasicExample" rowspan="1" colspan="1" aria-label=": activate to sort column ascending" style="width: 29px;">
                                    Crash
                                </th>
                                <th class="sorting" tabindex="0" aria-controls="dtBasicExample" rowspan="1" colspan="1" aria-label=": activate to sort column ascending" style="width: 29px;">
                                    <img src="img/attr/air.png" style="width: 30px;">
                                </th>
                                <th class="sorting" tabindex="0" aria-controls="dtBasicExample" rowspan="1" colspan="1" aria-label=": activate to sort column ascending" style="width: 29px;">
                                    <img src="img/attr/aa.png" style="width: 30px;">
                                </th>
                                <th class="sorting" tabindex="0" aria-controls="dtBasicExample" rowspan="1" colspan="1" aria-label="Hit: activate to sort column ascending" style="width: 18px;">Hit</th>
                                <th class="sorting" tabindex="0" aria-controls="dtBasicExample" rowspan="1" colspan="1" aria-label="Luck: activate to sort column ascending" style="width: 30px;">Luck</th>
                                <th class="sorting" tabindex="0" aria-controls="dtBasicExample" rowspan="1" colspan="1" aria-label="Notes: activate to sort column ascending" style="width: 60px;">
                                    Speed
                                </th>
                                <th class="sorting" tabindex="0" aria-controls="dtBasicExample" rowspan="1" colspan="1" aria-label="Notes: activate to sort column ascending" style="width: 74px;">
                                    Notes
                                </th>
                            </tr>
                    </thead>
                    <tbody>
                        ${b}
                    </tbody>
                </table>`,AIRCRAFT_ROW=({icon:a,num:b,lvl:c,hp:d,crash:e,avi:f,airRed:g,aa:h,hit:i,luck:j,speed:k,notes:l})=>`<tr role="row">
                <td class="sorting_1">
                    <div style="width:40px; height:40px;">
                        <img src="${a}" style="width:40px;">
                    </div>
                </td>
                <td>${b}</td>
                <td>${c}</td>
                <td>${d}</td>
                <td>${e}</td>
                <td>${f}</td>
                <td>
                    <div class="material-tooltip-main" style="width:fit-content; border-bottom: 1px dashed;" data-toggle="tooltip" title="${g}% air resistance">${h}</div>
                </td>
                <td>${i}</td>
                <td>${j}</td>
                <td>${k}</td>
                <td>${l}</td>
            </tr>`,ENEMY_ROW=({id:a,icon:b,name:c,type:d,lvl:e,hp:f,armor:g,fp:h,torp:i,avi:j,aa:k,eva:l,hit:m,luck:n,prio:o,notes:p,airRed:q})=>`<tr role="row">
                <td class="sorting_1">
                    <div style="width:40px; height:40px;">
                        <img src="${b}" style="width:40px;" onError="this.onError=null; this.src='img/enemy-icons/unknown.png'; ">
                    </div>
                </td>
                <td><a style="color: #225BDD;" href="enemy.html?id=${a}">${c}</a></td>
                <td>   
                    <div style="display:flex; justify-content:center; ${isSpecialType(d)?`padding-top:0.5rem`:`padding-top:0.5rem`}">
                        <img src="img/ship-types/${d}.png" style="${isSpecialType(d)?`width:50%`:`width:70%`};" data-toggle="tooltip" title="${EEnemyType.props[d].name}"></td>
                    </div>
                <td>${e}</td>
                <td>${f}</td>
                <td>${g}</td>
                <td>${h}</td>
                <td>${i}</td>
                <td>${j}</td>
                <td>
                    <div class="material-tooltip-main" style="width:fit-content; border-bottom: 1px dashed;" data-toggle="tooltip" title="${q}% air resistance">${k}</div>
                </td>
                <td>${l}</td>
                <td>${m}</td>
                <td>${n}</td>
                <td>${o}</td>
                <td style="white-space: pre-line;">${p}</td>
            </tr>`,ENEMY_ICON=({icon:a})=>`<div style="width:40px; height:40px;">
        <img src="img/enemy-icons/${a}.png" style="width:40px;">
    </div>`,CONDITION_ALERT=({waves:a,time:b})=>`<div class="alert alert-secondary" role="alert">
        <b>Condition:</b>
        ${null==a?``:`Clear wave(s) ${a}`}   
        ${null!=a&&-1!=b?` <b>OR</b> `:``}
        ${-1==b?``:`${b} seconds elapsed`}
    </div>`;function createExpedPage(a){let b=parseInt(a.id.toString().slice(0,-3)),c="";b in WAVE_DB.chapters&&(c=WAVE_DB.chapters[b][0]),$("#container").append(TPL_TITLE({chName:c,expedName:WAVE_DB.exNames[a[0]]}));for(let b=0;b<WAVE_LIST.length;b++){let a=WAVE_LIST[b],c=a.getEnemyRows(),d="Wave "+a.idx;if(a.isSubWave()&&(d+=" (Sub Wave)"),$("#container").append(TPL_HEADER({text:d})),$("#container").append(`<div class="divWave" id="wave_${a.idx}"></div>`),0!=b){let b=a.getConditions(),c=b.waves.join(", ");(-1!=b.time||""!=c)&&$("#wave_"+a.idx).append(CONDITION_ALERT({waves:""==c?null:c,time:b.time}))}$("#wave_"+a.idx).append(TPL_SUB_HEADER({text:"Spawns"})),$("#wave_"+a.idx).append(ENEMY_TABLE_TMPL({waveId:"sp_"+a.idx,rows:c})),$("#wave_sp_"+a.idx).DataTable({paging:!1,searching:!1,info:!1});let e=a.getReinfRows();0<e.length&&($("#wave_"+a.idx).append(TPL_SUB_HEADER({text:"Reinforcements"})),$("#wave_"+a.idx).append(ENEMY_TABLE_TMPL({waveId:"rf_"+a.idx,rows:e})),$("#wave_rf_"+a.idx).DataTable({paging:!1,searching:!1,info:!1}));let f=a.getAirRows();0<f.length&&($("#wave_"+a.idx).append(TPL_SUB_HEADER({text:"Aircraft"})),$("#wave_"+a.idx).append(AIRCRAFT_TABLE_TMPL({waveId:"air_"+a.idx,rows:f})),$("#wave_air_"+a.idx).DataTable({paging:!1,searching:!1,info:!1})),$("#wave_"+a.idx).append("<hr>")}}var NUM_ATTRS=12,EEnemyType={props:{1:{name:"Destroyer",value:1,code:"DD"},2:{name:"Light Cruiser",value:2,code:"CL"},3:{name:"Heavy Cruiser",value:3,code:"CA"},4:{name:"Battlecruiser",value:4,code:"BC"},5:{name:"Battleship",value:5,code:"BB"},6:{name:"Light Carrier",value:6,code:"CVL"},7:{name:"Aircraft Carrier",value:7,code:"CV"},8:{name:"Submarine",value:8,code:"SS"},9:{name:"Aviation Cruiser",value:9,code:"CAV"},10:{name:"Aviation Battleship",value:10,code:"BBV"},11:{name:"-",value:11,code:"-"},12:{name:"Repair Ship",value:12,code:"AR"},13:{name:"Monitor",value:13,code:"BM"},14:{name:"Torpedo Ship",value:14,code:"-"},15:{name:"Cargo Ship",value:15,code:"-"},16:{name:"Bombing Ship",value:16,code:"-"},17:{name:"Aviation Submarine",value:17,code:"SSV"},18:{name:"Large Cruiser",value:18,code:"CB"}}};function isSpecialType(a){return 15==a||16==a}var EArmorType={LIGHT:1,MEDIUM:2,HEAVY:3,props:{1:{name:"Light Armor",value:1,code:"Light"},2:{name:"Medium Armor",value:2,code:"Medium"},3:{name:"Heavy Armor",value:3,code:"Heavy"}}},EAttributes={DURABILITY:0,CANNON:1,TORP:2,AA:3,AIR:4,RELOAD:5,ARMOR:6,HIT:7,EVA:8,SPEED:9,LUCK:10,ANTISUB:11,props:{0:{name:"Durability",value:0,code:"HP"},1:{name:"Firepower",value:1,code:"FP"},2:{name:"Torp",value:2,code:"TORP"},3:{name:"Anti-Air",value:3,code:"AA"},4:{name:"Airpower",value:4,code:"AP"},5:{name:"Reload",value:5,code:"REL"},6:{name:"Armor",value:6,code:"ARMOR"},7:{name:"Hit",value:7,code:"HIT"},8:{name:"Evasion",value:8,code:"EVA"},9:{name:"Speed",value:9,code:"SPD"},10:{name:"Luck",value:10,code:"LUCK"},11:{name:"Antisub",value:11,code:"ASW"}}},EWeaponType={MAIN_CANNON:1,SUB_CANNON:2,TORPEDO:3,ANTI_AIR:4,ARMOR:5,ENGINE:6,RADAR:7,PASSIVE_SCOUT:10,SCOUT:11,CREW:12,CHARGE:13,SPECIAL:14,MEGA_CHARGE:15,MANUAL_TORPEDO:16,ANTI_SEA:17,HAMMER_HEAD:18,BOMBER_PRE_CAST_ALERT:19,MULTI_LOCK:20,MANUAL_SUB:21,FLEET_ANTI_AIR:22,POINT_HIT_AND_LOCK:23,BEAM:24,DEPTH_CHARGE:25,REPEATER_ANTI_AIR:26,DISPOSABLE_TORPEDO:27,PREVIEW_ARICRAFT:99,AIR_ASSIST:100},EConditionType={AND:0,OR:1},EWaveTriggerType={NORMAL:0,TIMER:1,RANGE:2,STORY:3,AID:4,BGM:5,GUIDE:6,CAMERA:7,CLEAR:8,JAMMING:9};function loadEnemy(a){if(!(a in WAVE_DB.get))return console.log("No enemy in GET with id "+a),null;let b=WAVE_DB.get[a],c=b[0];if(!(c in WAVE_DB.enemies))return console.log("No enemy with id "+c),null;let d=WAVE_DB.enemies[c],e=null;if("b"in d){let a=d.b;e=WAVE_DB.enemies[a]}return{base:e,enemy:d}}function loadIfExistsD(a,b,c){return b in a?a[b]:c}function calcStat(a,b,c,d){return 100<a?b+(a-1)*c/1e3+(a-100)*d/1e3:b+(a-1)*c/1e3}class EnemyDB{constructor(a){this.data=a,this.chapters=a.chapters,this.expeds=a.expeds,this.dungs=a.dungs,this.phases=a.phases,this.enemies=a.enemies,this.weapons=a.weaps,this.aircraft=a.aircraft,this.bullets=a.bullets,this.exNames=a.exNames,this.exIcons=a.exIcons,this.get=a.get,this.ex=a.ex,this.shields=a.shields}inheritFromBase(a,b){let c={_base:a};for(let d in a)c[d]=a[d];for(let d in b)c[d]=b[d];return c}loadGlobalEnemy(a){return a in this.get?new GlobalEnemy(a,this.get[a]):(console.log("Enemy not found in GET: "+a),null)}getEnemyFromGET(a){let b=this.loadGlobalEnemy(a);return b?b.getEnemy():null}getEnemy(a,b){if(a in this.enemies){let c=this.enemies[a];if("b"in c){let a=c.b,b=this.enemies[a];c=this.inheritFromBase(b,c)}return new Enemy(c,b)}return console.log("Enemy not found: "+a),null}getBullet(a){return a in this.bullets?new Bullet(a,this.bullets[a]):(console.log("Bullet not found: "+a),null)}getAircraft(a,b){return a in this.aircraft?new Aircraft(a,this.aircraft[a],b):(console.log("Aircraft not found: "+a),null)}getRawAircraft(a){return a in this.aircraft?this.aircraft[a]:(console.log("Aircraft not found: "+a),null)}isAircraft(a){return a==EWeaponType.SCOUT||a==EWeaponType.PASSIVE_SCOUT}getWeapon(a){if(a in this.weapons){let b=this.weapons[a],c=new Weapon(a,b),d=c.getType();return this.isAircraft(d)?this.getAircraft(a,c):c}return console.log("Weapon not found: "+a),null}getDungeon(a){return a in this.dungs?this.dung[a]:(console.log("Dungeon not found: "+a),null)}}class GlobalEnemy{constructor(a,b){this.gid=a,this.id=b[0],this.lvl=b[1],this.expedLst=b[2],this.phaseId=b[3],this.spWeap=b[4],this.buffs=b[5]}getEnemy(){let a=WAVE_DB.getEnemy(this.id,this.lvl);return a.setLevel(this.lvl),a.setSpecialWeapons(this.spWeap),a.setGlobalEnemy(this),a}getLevel(){return this.lvl}}class Enemy{constructor(a,b){if(this.id=a.id,this.lvl=b,this.global=null,this.name=a.nm,this.icon=a.ic,this.type=a.t,this.nation=a.n,this.prio=a.w,this.armor=a.at,this.attrs=a.st,this.attrsGrowth=a.gr,0==a.gr){this.attrsGrowth=[];for(let a=0;a<NUM_ATTRS;a++)this.attrsGrowth[a]=0}if(0==a.st){this.attrs=[];for(let a=0;a<NUM_ATTRS;a++)this.attrs[a]=0}this.stats=[];for(let c=0;c<NUM_ATTRS;c++)this.stats[c]=0;this.calcStats(),this.equips=[],this.aircraft=[],this.equipIds=a.e;for(let c=0;c<this.equipIds.length;c++)this.equips[c]=WAVE_DB.getWeapon(this.equipIds[c]),this.equips[c].isAircraft()&&(this.equips[c].fromMother(this),this.aircraft.push(this.equips[c]))}setGlobalEnemy(a){this.global=a}setSpecialWeapons(a){this.specialWeapIds=a,this.specialWeapons=[];for(let b=0;b<this.specialWeapIds.length;b++)this.specialWeapons.push(WAVE_DB.getWeapon(this.specialWeapIds[b])),this.specialWeapons[b].isAircraft()&&(this.specialWeapons[b].fromMother(this),this.aircraft.push(this.specialWeapons[b]))}calcStats(){for(let a=0;a<NUM_ATTRS;a++)this.stats[a]=Math.floor(calcStat(this.lvl,this.attrs[a],this.attrsGrowth[a],0))}setLevel(a){this.lvl=a,this.calcStats()}getLevel(){return this.lvl}getStat(a){return this.stats[a]}getArmor(){return this.armor}getType(){return this.type}getNation(){return this.nation}getAircraft(){return this.aircraft}isEnemy(){return!0}getTemplId(){return this.id}isType(a){return this.type==a}getAirResist(){return(100*(1-150/(150+this.stats[EAttributes.AA]))).toFixed(2)}getStruct(){let a={};for(let b in a.id=this.global.gid,a.icon="img/enemy-icons/"+this.icon+".png",a.name=this.name,a.type=this.type,a.lvl=this.lvl,a.hp=this.stats[EAttributes.DURABILITY],a.armor=EArmorType.props[this.armor].code,a.fp=this.stats[EAttributes.CANNON],a.torp=this.stats[EAttributes.TORP],a.avi=this.stats[EAttributes.AIR],a.aa=this.stats[EAttributes.AA],a.eva=this.stats[EAttributes.EVA],a.hit=this.stats[EAttributes.HIT],a.luck=this.stats[EAttributes.LUCK],a.prio=this.prio,a.notes="",this.isBoss&&(a.notes="Boss"),this.global.buffs){let c=this.global.buffs[b];parseInt(c)in WAVE_DB.shields&&(""!=a.notes&&(a.notes+="; "),a.notes+="Shield")}return""==a.notes&&(a.notes="-"),a.airRed=this.getAirResist(),a}}class Wave{constructor(a,b){this.id=a,this.lvl=b,this.triggerType=-1,this.preWaves=[],this.spawns=[],this.reinf=[],this.aircraft=[],this.time=-1,this.waveConds=[],this.timeCond=-1}fromData(a){this.id=a[0],this.triggerType=a[1],this.triggerType==EWaveTriggerType.TIMER?this.time=a[3]:this.triggerType==EWaveTriggerType.NORMAL&&(this.preWaves=a[2],this.loadSpawns(a))}loadConditions(){if(0<this.preWaves.length)for(let a=0;a<this.preWaves.length;a++){let b=this.preWaves[a],c=WAVE_DICT[b];c&&c.triggerType==EWaveTriggerType.NORMAL?this.waveConds.push(c.idx):c&&c.triggerType==EWaveTriggerType.TIMER&&-1==this.timeCond&&(this.timeCond=c.time)}}getConditions(){return{time:this.timeCond,waves:this.waveConds}}getEnemyRows(){let a=[];for(let b=0;b<this.spawns.length;b++)a.push(this.spawns[b].getStruct());return a.map(ENEMY_ROW).join("")}getReinfRows(){let a=[];for(let b=0;b<this.reinf.length;b++)a.push(this.reinf[b].getStruct());return a.map(ENEMY_ROW).join("")}getAirRows(){let a=[];for(let b=0;b<this.aircraft.length;b++)a.push(this.aircraft[b].getStruct());return a.map(AIRCRAFT_ROW).join("")}isSubWave(){for(let a=0;a<this.spawns.length;a++)if(17!=this.spawns[a].getType()&&8!=this.spawns[a].getType())return!1;for(let a=0;a<this.reinf.length;a++)if(17!=this.reinf[a].getType()&&8!=this.reinf[a].getType())return!1;return!(0<this.aircraft.length)&&(0!=this.spawns.length||0!=this.reinf.length)}loadSpawns(a){let b=a[3];for(let c=0;c<b.length;c++){let a=b[c][0],d=b[c][1],e=WAVE_DB.getEnemyFromGET(a);e.isBoss=d,this.spawns.push(e)}let c=a[4];for(let b=0;b<c.length;b++){let a=c[b][0],d=c[b][1],e=WAVE_DB.getEnemyFromGET(a);e.isBoss=d,this.reinf.push(e)}let d=a[5];for(let b=0;b<d.length;b++){let a=d[b],c=WAVE_DB.getAircraft(a[0],null);c.fromAirfighters(a,this.lvl),this.aircraft.push(c)}for(let b,c=0;c<this.spawns.length;c++){b=this.spawns[c].getAircraft();for(let a=0;a<b.length;a++)this.aircraft.push(b[a])}}}class Weapon{constructor(a,b){if(this.id=a,this.type=b[0],this.dmg=b[1],this.coef=b[2],this.range=b[3],this.mrange=b[4],this.rel=b[5],this.scale=b[6],this.stat=b[7],this.bulletIds=b[8],this.bullets=[],this.type!=EWeaponType.PASSIVE_SCOUT&&this.type!=EWeaponType.SCOUT)for(let a=0;a<this.bulletIds.length;a++)this.bullets.push(WAVE_DB.getBullet(this.bulletIds[a][0]))}getNumBullets(a){return 0<=a&&a<this.bulletIds.length?this.bulletIds[a][1]:-1}getId(){return this.id}getType(){return this.type}getBullets(){return this.bullets}isAircraft(){return!1}}class Aircraft{constructor(a,b,c){this.baseWeap=c,this.id=a,this.type=b[0],this.maxHp=b[1],this.acc=b[2],this.crash=b[3],this.attPower=b[4],this.apGrowth=b[5],this.hpGrowth=b[6],this.accGrowth=b[7],this.speed=b[8],this.icon=b[9],this.weapIds=b[10],this.weapons=[];for(let d,e=0;e<this.weapIds.length;e++)d=WAVE_DB.getWeapon(this.weapIds[e]),this.weapons.push(d);this.mother=null,this.stats=[],this.attrs=[],this.attrsGrowth=[];for(let d=0;d<NUM_ATTRS;d++)this.stats[d]=0,this.attrs[d]=0,this.attrsGrowth[d]=0}getId(){return this.id}getWeapons(){return this.weapons}isAircraft(){return!0}fromAirfighters(a,b){this.id=a[0],this.lvl=b;let c=WAVE_DB.getRawAircraft(this.id);this.loadAircraftData(c),this.weapons=a[2],this.interval=a[1],this.once=a[4],this.total=a[3],this.setStatsAirFighter(),this.numPlanes=this.once}loadAircraftData(a){this.type=a[0],this.icon=a[9],this.crash=a[3],this.attPower=a[4],this.speed=a[8],this.acc=a[2],this.maxHp=a[1],this.apGrowth=a[5],this.hpGrowth=a[6],this.accGrowth=a[7],this.weapons=a[10]}fromMother(a){this.mother=a,this.setStatsMother(),this.baseWeap&&(this.rel=this.baseWeap.rel,this.numPlanes=this.baseWeap.getNumBullets(0))}setStatsMother(){if(null!=this.mother){for(let b=0;b<NUM_ATTRS;b++)this.attrs[b]=this.mother.stats[b];let a=this.mother.getLevel();this.lvl=a;this.attrs[EAttributes.DURABILITY]=Math.floor(this.maxHp+this.hpGrowth*(a-1)/1e3),this.attrs[EAttributes.CANNON]=this.mother.stats[EAttributes.CANNON],this.attrs[EAttributes.TORP]=this.mother.stats[EAttributes.TORP],this.attrs[EAttributes.AA]=this.mother.stats[EAttributes.AA],this.stats=this.attrs}}setStatsAirFighter(){let a=this.lvl-1;this.attrs[EAttributes.DURABILITY]=Math.floor(this.maxHp+this.hpGrowth*a/1e3);let b=this.attPower+this.apGrowth*a/1e3;this.attrs[EAttributes.CANNON]=b,this.attrs[EAttributes.TORP]=b,this.attrs[EAttributes.AA]=b,this.attrs[EAttributes.AIR]=b,this.attrs[EAttributes.ANTISUB]=b,this.attrs[EAttributes.RELOAD]=0,this.attrs[EAttributes.EVA]=0,this.attrs[EAttributes.LUCK]=50,this.attrs[EAttributes.HIT]=this.acc+this.accGrowth*a/1e3,this.stats=this.attrs}getAirResist(){return(100*(1-150/(150+this.attrs[EAttributes.AA]))).toFixed(2)}getStruct(){let a={};return a.icon="img/aircraft-icons/"+this.icon+".png",a.crash=this.crash,a.name=this.name,a.lvl=this.lvl,a.num=this.numPlanes,a.hp=this.attrs[EAttributes.DURABILITY],a.fp=this.attrs[EAttributes.CANNON],a.avi=this.attrs[EAttributes.AIR],a.aa=this.attrs[EAttributes.AA],a.hit=this.attrs[EAttributes.HIT],a.luck=this.attrs[EAttributes.LUCK],a.speed=this.speed,a.notes="-",a.airRed=this.getAirResist(),a.notes=null==this.mother?`Total of ${Math.round(this.total/this.once)} wave(s) of ${this.once} units.`:ENEMY_ICON({icon:this.mother.icon}),a}}class Bullet{constructor(a,b){this.id=a,this.type=b[0],this.mods=b[1],this.range=b[2],this.rangeOff=b[3],this.ammo=b[4],this.pierce=b[5],this.buff=b[6]}getId(){return this.id}getType(){return this.type}getMods(){return this.mods}getAmmo(){return this.ammo}}function loadDungeon(a){if(!(a in WAVE_DB.dungs))return console.log("No dungeon with id "+a),null;let b=WAVE_DB.dungs[a];return b}