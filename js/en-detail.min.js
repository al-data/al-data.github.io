var EAttributes={DURABILITY:0,CANNON:1,TORP:2,AA:3,AIR:4,RELOAD:5,ARMOR:6,HIT:7,EVA:8,SPEED:9,LUCK:10,ANTISUB:11,props:{0:{name:"Durability",value:0,code:"HP",icon:"hp"},1:{name:"Firepower",value:1,code:"FP",icon:"fp"},2:{name:"Torp",value:2,code:"TORP",icon:"torp"},3:{name:"Anti-Air",value:3,code:"AA",icon:"aa"},4:{name:"Airpower",value:4,code:"AP",icon:"air"},5:{name:"Reload",value:5,code:"REL",icon:"rel"},6:{name:"Armor",value:6,code:"ARMOR",icon:"armor"},7:{name:"Hit",value:7,code:"HIT",icon:"hit"},8:{name:"Evasion",value:8,code:"EVA",icon:"eva"},9:{name:"Speed",value:9,code:"SPD",icon:"speed"},10:{name:"Luck",value:10,code:"LUCK",icon:"luck"},11:{name:"Antisub",value:11,code:"ASW",icon:"antisub"}}},EWeaponType={MAIN_CANNON:1,SUB_CANNON:2,TORPEDO:3,ANTI_AIR:4,ARMOR:5,ENGINE:6,RADAR:7,PASSIVE_SCOUT:10,SCOUT:11,CREW:12,CHARGE:13,SPECIAL:14,MEGA_CHARGE:15,MANUAL_TORPEDO:16,ANTI_SEA:17,HAMMER_HEAD:18,BOMBER_PRE_CAST_ALERT:19,MULTI_LOCK:20,MANUAL_SUB:21,FLEET_ANTI_AIR:22,POINT_HIT_AND_LOCK:23,BEAM:24,DEPTH_CHARGE:25,REPEATER_ANTI_AIR:26,DISPOSABLE_TORPEDO:27,PREVIEW_ARICRAFT:99,AIR_ASSIST:100,props:{1:{name:"Gun"},2:{name:"Gun"},3:{name:"Torpedo"},4:{name:"Anti-Air"},5:{name:"Armor"},6:{name:"Engine"},7:{name:"Radar"},10:{name:"Aircraft"},11:{name:"Aircraft"},12:{name:"Crew"},13:{name:"Charge"},14:{name:"Special"},15:{name:"Charge"},16:{name:"Torpedo"},17:{name:"ASW"},18:{name:"Hammerhead"},19:{name:"Bomber/Gun"},20:{name:"Gun"},21:{name:"Torpedo"},22:{name:"Fleet AA"},23:{name:"Gun"},24:{name:"Beam"},25:{name:"Depth Charge"},26:{name:"Repeater AA"},27:{name:"Torpedo"},99:{name:"Gun"},100:{name:"Gun"}}},EBulletType={CANNON:1,BOMB:2,TORPEDO:3,DIRECT:4,SHRAPNEL:5,ANTI_AIR:6,ANTI_SEA:7,STRAY:8,EFFECT:9,BEAM:10,G_BULLET:11,ELECTRIC_ARC:12,MISSILE:13,SPACE_LASER:14,SCALE:15,TRIGGER_BOMB:16,AAMissile:17,props:{1:{name:"Shell"},2:{name:"Bomb/Shell"},3:{name:"Torpedo"},4:{name:"Direct (AA)"},5:{name:"Shrapnel"},6:{name:"Anti-Air"},7:{name:"Depth Charge"},8:{name:"Stray"},9:{name:"Effect"},10:{name:"Beam"},11:{name:"Electric Arc"},12:{name:"Laser"},13:{name:"Scale"},14:{name:"Bomb"},15:{name:"AA Missile"}}},EEnemyType={props:{1:{name:"Destroyer",value:1,code:"DD"},2:{name:"Light Cruiser",value:2,code:"CL"},3:{name:"Heavy Cruiser",value:3,code:"CA"},4:{name:"Battlecruiser",value:4,code:"BC"},5:{name:"Battleship",value:5,code:"BB"},6:{name:"Light Carrier",value:6,code:"CVL"},7:{name:"Aircraft Carrier",value:7,code:"CV"},8:{name:"Submarine",value:8,code:"SS"},9:{name:"Aviation Cruiser",value:9,code:"CAV"},10:{name:"Aviation Battleship",value:10,code:"BBV"},11:{name:"-",value:11,code:"-"},12:{name:"Repair Ship",value:12,code:"AR"},13:{name:"Monitor",value:13,code:"BM"},14:{name:"Torpedo Ship",value:14,code:"-"},15:{name:"Cargo Ship",value:15,code:"-"},16:{name:"Bombing Ship",value:16,code:"-"},17:{name:"Aviation Submarine",value:17,code:"SSV"},18:{name:"Large Cruiser",value:18,code:"CB"}}};function init(){let a=loadDb();a.then(function(){let a=window.location.href,b=new URL(a),d=b.searchParams.get("id"),c=ENEMY_DB.getEnemyFromGET(d);c&&generatePage(c)})}const NATION_TO_NAME={0:"Other",1:"Eagle Union",2:"Royal Navy",3:"Sakura Empire",4:"Ironblood",5:"Dragon Empery",6:"Sardegna Empire",7:"Northern Parliament",8:"Iris Libre",9:"Vichya Dominion",97:"META",98:"Other",99:"Siren",101:"Neptunia",102:"Bili",103:"Utawarerumono",104:"Kizuna AI",105:"Hololive",106:"Venus Vacation",107:"The Idolmaster"};var EArmorType={LIGHT:1,MEDIUM:2,HEAVY:3,props:{1:{name:"Light Armor",value:1,code:"Light"},2:{name:"Medium Armor",value:2,code:"Medium"},3:{name:"Heavy Armor",value:3,code:"Heavy"}}},ENodeType={SMALL_RECON:1,MEDIUM_RECON:2,LARGE_RECON:3,SMALL_MAINFLEET:4,MEDIUM_MAINFLEET:5,LARGE_MAINFLEET:6,SMALL_CARRIER:7,MEDIUM_CARRIER:8,LARGE_CARRIER:9,SMALL_TRANSPORT:10,MEDIUM_TRANSPORT:11,LARGE_TRANSPORT:12,UNKNOWN2:13,META:15,UNKNOWN:97,SIREN:98,BOSS:99,props:{1:{name:"Recon",diffIcon:"xiao"},2:{name:"Recon",diffIcon:"zhong"},3:{name:"Recon",diffIcon:"da"},4:{name:"Main",diffIcon:"xiao"},5:{name:"Main",diffIcon:"zhong"},6:{name:"Main",diffIcon:"da"},7:{name:"Carrier",diffIcon:"xiao"},8:{name:"Carrier",diffIcon:"zhong"},9:{name:"Carrier",diffIcon:"da"},10:{name:"Transport",diffIcon:"xiao"},11:{name:"Transport",diffIcon:"zhong"},12:{name:"Transport",diffIcon:"da"},13:{name:"",diffIcon:""},15:{name:"",diffIcon:""},97:{name:"",diffIcon:""},98:{name:"",diffIcon:""},99:{name:"Flagship",diffIcon:"enemy_boss"}}};function getExpedEntry(a){if(!(a in ENEMY_DB.expeds))return"";let b=ENEMY_DB.expeds[a],c=ENEMY_DB.getChapterFromExped(a),d=ENEMY_DB.mapNames[ENEMY_DB.getMapFromChapter(c)],e=ENEMY_DB.getShortName(d),f=ENEMY_DB.chapters[c][7];e=f.match(/^\d/)?e+"-"+f:e+" "+f;let g=b[1],h=EXPED_ENTRY({id:a,initName:e,icon:ENodeType.props[g].diffIcon,expedTypeName:ENodeType.props[g].name});return h}function processAircraft(a,b){let c=AIRCRAFT_TABLE({id:b.id,icon:b.icon,qty:b.getNumPlanes(),lvl:b.lvl,dur:b.stats[EAttributes.DURABILITY],crash:b.crash,avi:b.stats[EAttributes.AIR],aa:b.stats[EAttributes.AA],hit:b.stats[EAttributes.HIT],luck:b.stats[EAttributes.LUCK],speed:b.stats[EAttributes.SPEED]}),d=b.weapons,e=[];for(let c,f=0;f<d.length;f++)c=processWeapon(a,d[f],50),e.push(c);return c+e.join("")}function calculateRateOfFire(a,b){return(b/(6*Math.sqrt(3.14*(100+a.stats[EAttributes.RELOAD])))).toFixed(2)}function processWeapon(a,c,d){let e=c.getId(),f=WEAPON_TABLE({idx:e,margin:d,width:950-d,id:e,type:c.getType(),dmg:c.dmg,rof:calculateRateOfFire(a,c.rel)+"s",coef:c.coef,statScale:c.scale,stat:c.stat,range:c.range}),g=c.getBullets(),h=[];for(let e=0;e<g.length;e++){let a=g[e],b="";for(let c,d=0;d<a.buff.length;d++)c=a.buff[d],c in ENEMY_DB.burns&&(b+="Burns");""==b&&(b="-");let d=BULLET_ROW({rounds:c.numBulletMap[a.id],type:a.type,ammo:a.ammo,mods:a.mods,pierce:a.pierce,notes:b});h.push(d)}let i=BULLET_TABLE({idx:0,margin:d+50,width:950-d-50,id:0,rows:h.join("")});return f+i}function generatePage(a){console.log(a),$("#enemyHeader").empty();let b=a.global.isBoss?"Yes":"No",c=-1==a.global.hpBars?"-":a.global.hpBars;$("#enemyHeader").append(ENEMY_HEADER({icon:a.icon,name:a.name,type:a.getType(),nation:NATION_TO_NAME[a.nation],prio:a.prio,isBoss:b,hpBars:c})),$("#enemyStats").empty(),$("#enemyStats").append(ENEMY_STATS({level:a.getLevel(),armorType:a.getArmor(),stats:a.stats}));let d=[];for(let b,c=0;c<a.global.expedLst.length;c++)b=a.global.expedLst[c],d.push(getExpedEntry(b));let e=d.join("");(0==d.length||""==e)&&(e="-"),$("#enemyStats").append(ENEMY_EXPEDS(e)),$("#enemyBuffs").empty();let f=a.global.buffs;for(let c,d=0;d<f.length;d++)if(c=f[d],c in ENEMY_DB.shields){let a=BUFF_ENTRY({type:"Shield",desc:ENEMY_DB.shields[c].d});$("#enemyBuffs").append(a)}else if(c in ENEMY_DB.buffs){let a=BUFF_ENTRY({type:"Buff",desc:ENEMY_DB.buffs[c].d});$("#enemyBuffs").append(a)}let g=a.getDamageProfile();$("#enemyBreakdowns").append(ENEMY_BREAKDOWNS({armor:g.getArmorPercentages(),dmgType:g.getDmgTypePercentages()})),$("#enemyWeapons").empty(),$("#enemyAircraft").empty();let h=a.getNonAircraft(),i=a.getAircraftWeapons();if(0<h.length){let b=[];for(let c,d=0;d<h.length;d++)c=h[d],18!=c.getType()&&b.push(processWeapon(a,c,0));let c=b.join("");""!=c&&($("#enemyWeapons").append("<h3>Weapons</h3>"),$("#enemyWeapons").append(c))}if(0<i.length){let b=[];for(let c,d=0;d<i.length;d++)c=i[d],b.push(processAircraft(a,c));let c=b.join("");""!=c&&($("#enemyAircraft").append("<h3>Aircraft</h3>"),$("#enemyAircraft").append(c))}}function loadDb(){var a=$.getJSON("../data/endb.json",function(a){ENEMY_DB=new EnemyDB(a)});return Promise.all([a])}function calcStat(a,b,c,d){return 100<a?b+(a-1)*c/1e3+(a-100)*d/1e3:b+(a-1)*c/1e3}const NUM_ATTRS=12;var ENEMY_DB={};class EnemyDB{constructor(a){this.data=a,this.chapters=a.chapters,this.expeds=a.expeds,this.dungs=a.dungs,this.phases=a.phases,this.enemies=a.enemies,this.weapons=a.weaps,this.aircraft=a.aircraft,this.bullets=a.bullets,this.exNames=a.exNames,this.exIcons=a.exIcons,this.get=a.get,this.ex=a.ex,this.expedToChapter=a.ec,this.chapterToMap=a.cm,this.shortMapNames=a.nms,this.mapNames=a.mapNames,this.shields=a.shields,this.burns=a.burns,this.buffs=a.buffs}getChapterFromExped(a){return a in this.expedToChapter?this.expedToChapter[a]:null}getMapFromChapter(a){return a in this.chapterToMap?this.chapterToMap[a]:null}getShortName(a){return a in this.shortMapNames?this.shortMapNames[a]:a}inheritFromBase(a,b){let c={_base:a};for(let d in a)c[d]=a[d];for(let d in b)c[d]=b[d];return c}loadGlobalEnemy(a){return a in this.get?new GlobalEnemy(this.get[a]):(console.log("Enemy not found in GET: "+a),null)}getEnemyFromGET(a){let b=this.loadGlobalEnemy(a);return b?b.getEnemy():null}getEnemy(a,b){if(a in this.enemies){let c=this.enemies[a];if("b"in c){let a=c.b,b=this.enemies[a];c=this.inheritFromBase(b,c)}return new Enemy(c,b)}return console.log("Enemy not found: "+a),null}getBullet(a){return a in this.bullets?new Bullet(a,this.bullets[a]):(console.log("Bullet not found: "+a),null)}getAircraft(a,b){return a in this.aircraft?new Aircraft(a,this.aircraft[a],b):(console.log("Aircraft not found: "+a),null)}isAircraft(a){return a==EWeaponType.SCOUT||a==EWeaponType.PASSIVE_SCOUT}getWeapon(a){if(a in this.weapons){let b=this.weapons[a],c=new Weapon(a,b),d=c.getType();return this.isAircraft(d)?this.getAircraft(a,c):c}return console.log("Weapon not found: "+a),null}}class GlobalEnemy{constructor(a){this.id=a[0],this.lvl=a[1],this.expedLst=a[2],this.phaseId=a[3],this.spWeap=a[4],this.buffs=a[5],this.isBoss=1==a[6][0],this.hpBars=a[6][1]}getEnemy(){let a=ENEMY_DB.getEnemy(this.id,this.lvl);return a.setLevel(this.lvl),a.setSpecialWeapons(this.spWeap),a.setGlobalEnemy(this),a}getLevel(){return this.lvl}}class Enemy{constructor(a,b){if(this.id=a.id,this.lvl=b,this.global=null,this.isBoss=!1,this.hpBars=0,this.name=a.nm,this.icon=a.ic,this.type=a.t,this.nation=a.n,this.prio=a.w,this.armor=a.at,this.attrs=a.st,this.attrsGrowth=a.gr,0==a.gr){this.attrsGrowth=[];for(let a=0;a<NUM_ATTRS;a++)this.attrsGrowth[a]=0}if(0==a.st){this.attrs=[];for(let a=0;a<NUM_ATTRS;a++)this.attrs[a]=0}this.stats=[];for(let c=0;c<NUM_ATTRS;c++)this.stats[c]=0;this.calcStats(),this.equips=[],this.specialWeapons=[],this.equipIds=a.e;for(let c=0;c<this.equipIds.length;c++)this.equips[c]=ENEMY_DB.getWeapon(this.equipIds[c]),this.equips[c].isAircraft()&&this.equips[c].fromMother(this)}getAircraftWeapons(){let a=[];for(let b=0;b<this.equips.length;b++)this.equips[b].isAircraft()&&a.push(this.equips[b]);for(let b=0;b<this.specialWeapons.length;b++)this.specialWeapons[b].isAircraft()&&a.push(this.specialWeapons[b]);return a}getNonAircraft(){let a=[];for(let b=0;b<this.equips.length;b++)this.equips[b].isAircraft()||a.push(this.equips[b]);for(let b=0;b<this.specialWeapons.length;b++)this.specialWeapons[b].isAircraft()||a.push(this.specialWeapons[b]);return a}getDamageProfile(){let a=new DamageProfile;for(let b=0;b<this.equips.length;b++){let c=this.equips[b],d=c.getDamageProfile(this);a.accumulate(d)}for(let b=0;b<this.specialWeapons.length;b++){let c=this.specialWeapons[b],d=c.getDamageProfile(this);a.accumulate(d)}return a}setGlobalEnemy(a){this.global=a}setSpecialWeapons(a){this.specialWeapIds=a,this.specialWeapons=[];for(let b=0;b<this.specialWeapIds.length;b++)this.specialWeapons.push(ENEMY_DB.getWeapon(this.specialWeapIds[b])),this.specialWeapons[b].isAircraft()&&this.specialWeapons[b].fromMother(this)}calcStats(){for(let a=0;a<NUM_ATTRS;a++)this.stats[a]=Math.floor(calcStat(this.lvl,this.attrs[a],this.attrsGrowth[a],0))}setLevel(a){this.lvl=a,this.calcStats()}getLevel(){return this.lvl}getStat(a){return this.stats[a]}getArmor(){return this.armor}getType(){return this.type}getNation(){return this.nation}getAircraft(){return this.aircraft}isEnemy(){return!0}getTemplId(){return this.id}isType(a){return this.type==a}getAirResist(){return(100*(1-150/(150+this.stats[EAttributes.AA]))).toFixed(2)}}class Bullet{constructor(a,b){this.id=a,this.type=b[0],this.mods=b[1],this.range=b[2],this.rangeOff=b[3],this.ammo=b[4],this.pierce=b[5],this.buff=b[6]}getId(){return this.id}getType(){return this.type}getMods(){return this.mods}getAmmo(){return this.ammo}}const ConvertWeaponStat={1:0,2:1,4:2,3:3,11:4};class Weapon{constructor(a,b){this.id=a,this.type=b[0],this.dmg=b[1],this.coef=b[2],this.range=b[3],this.mrange=b[4],this.rel=b[5],this.scale=b[6],this.stat=b[7],this.bulletIds=b[8],this.numBulletMap={};for(let c=0;c<this.bulletIds.length;c++)this.numBulletMap[this.bulletIds[c][0]]=this.bulletIds[c][1];if(this.bullets=[],this.type!=EWeaponType.PASSIVE_SCOUT&&this.type!=EWeaponType.SCOUT)for(let a=0;a<this.bulletIds.length;a++)this.bullets.push(ENEMY_DB.getBullet(this.bulletIds[a][0]))}getNumBullets(a){return 0<=a&&a<this.bulletIds.length?this.bulletIds[a][1]:-1}getId(){return this.id}getType(){return this.type}getBullets(){return this.bullets}isAircraft(){return!1}getDamageProfile(a){let c=new DamageProfile;if(18==this.type)return c;for(let d=0;d<this.bullets.length;d++){let b=this.bullets[d],e=this.numBulletMap[b.id],f=(100+a.getStat(this.stat))/100,g=this.dmg*(this.coef/100)*e;for(let a=0;a<b.mods.length;a++)c.armor[a]+=b.mods[a]*f*g;c.dmgType[ConvertWeaponStat[this.stat]]+=f*g}return c}}class DamageProfile{constructor(){this.armor=[0,0,0],this.dmgType=[0,0,0,0,0]}accumulate(a){for(let b=0;b<this.armor.length;b++)this.armor[b]+=a.armor[b];for(let b=0;b<this.dmgType.length;b++)this.dmgType[b]+=a.dmgType[b]}getDmgTypePercentages(){let a=0;for(let b=0;b<this.dmgType.length;b++)a+=this.dmgType[b];if(0==a)return[0,0,0,0,0];let b=[0,0,0,0,0];for(let c=0;c<this.dmgType.length;c++)b[c]=this.dmgType[c]/a;return b}getArmorPercentages(){let b=0;for(let c=0;c<this.armor.length;c++)b+=this.armor[c];if(0==b)return[0,0,0];let c=[0,0,0];for(let d=0;d<this.armor.length;d++)c[d]=this.armor[d]/b;return c}}class Aircraft{constructor(a,b,c){this.baseWeap=c,this.id=a,this.type=b[0],this.maxHp=b[1],this.acc=b[2],this.crash=b[3],this.attPower=b[4],this.apGrowth=b[5],this.hpGrowth=b[6],this.accGrowth=b[7],this.speed=b[8],this.icon=b[9],this.weapIds=b[10],this.weapons=[];for(let d,e=0;e<this.weapIds.length;e++)d=ENEMY_DB.getWeapon(this.weapIds[e]),this.weapons.push(d);this.mother=null,this.stats=[],this.attrs=[],this.attrsGrowth=[];for(let d=0;d<NUM_ATTRS;d++)this.stats[d]=0,this.attrs[d]=0,this.attrsGrowth[d]=0}getNumPlanes(){return this.baseWeap.getNumBullets(0)}getId(){return this.id}getWeapons(){return this.weapons}isAircraft(){return!0}fromAirfighters(a){this.id=a.id;let b=loadAircraft(this.id);this.loadAircraftData(b),"w"in a&&(this.weapons=a.w),this.interval=a["in"],this.once=a.o,this.total=a.t,this.setStatsAirFighter(),this.numPlanes=this.once}fromMother(a){this.mother=a,this.setStatsMother()}setStatsMother(){if(null!=this.mother){for(let b=0;b<NUM_ATTRS;b++)this.attrs[b]=this.mother.stats[b];let a=this.mother.getLevel();this.lvl=a;this.attrs[EAttributes.DURABILITY]=Math.floor(this.maxHp+this.hpGrowth*(a-1)/1e3),this.attrs[EAttributes.CANNON]=this.mother.stats[EAttributes.CANNON],this.attrs[EAttributes.TORP]=this.mother.stats[EAttributes.TORP],this.attrs[EAttributes.AA]=this.mother.stats[EAttributes.AA],this.stats=this.attrs}}setStatsAirFighter(){let a=this.lvl-1;this.attrs[EAttributes.DURABILITY]=Math.floor(this.maxHp+this.hpGrowth*a/1e3);let b=this.attPower+this.apGrowth*a/1e3;this.attrs[EAttributes.CANNON]=b,this.attrs[EAttributes.TORP]=b,this.attrs[EAttributes.AA]=b,this.attrs[EAttributes.AIR]=b,this.attrs[EAttributes.ANTISUB]=b,this.attrs[EAttributes.RELOAD]=0,this.attrs[EAttributes.EVA]=0,this.attrs[EAttributes.LUCK]=50,this.attrs[EAttributes.HIT]=this.acc+this.accGrowth*a/1e3,this.stats=this.attrs}getDamageProfile(a){let b=new DamageProfile;for(let c=0;c<this.weapons.length;c++){let d=this.weapons[c],e=d.getDamageProfile(a);b.accumulate(e)}return b}}class Phase{constructor(){}}const ENEMY_HEADER=({icon:a,name:b,type:c,nation:d,prio:e,isBoss:f,hpBars:g})=>`
<div>
    <div class="gear-entry" style="margin-bottom:0 !important;">
        <img onError="this.onError=null; this.src='img/enemy-icons/unknown.png';" title="" src="img/enemy-icons/${a}.png" />
    </div>
</div>
<div style="font-size: 14pt; margin-left: 15px;">
    <div style="display:flex;">
        <div class="input-group mb-1 mr-sm-2 setting-group" style="height: auto !important;">
            <div class="input-group-prepend">
                <div class="input-group-text group-header">
                    Name
                </div>
            </div>
            <div class="input-group-text group-val font-weight-bold">${b}</div>
        </div>
        <div class="input-group mb-1 mr-sm-2 setting-group" style="height: auto !important;">
            <div class="input-group-prepend">
                <div class="input-group-text group-header">
                    Type
                </div>
            </div>
            <div class="input-group-text group-val"><img src="img/ship-types/${c}.png" style="height:20px; margin-right:5px;" />${EEnemyType.props[c].name}</div>
        </div>
        <div class="input-group mb-1 mr-sm-2 setting-group" style="height: auto !important;">
            <div class="input-group-prepend">
                <div class="input-group-text group-header">
                    Nation
                </div>
            </div>
            <div class="input-group-text group-val">${d}</div>
        </div>
    </div>

    <div style="margin-top:5px; display:flex;">
        <div class="input-group mr-sm-2 setting-group" style="height: auto !important;">
            <div class="input-group-prepend">
                <div class="input-group-text group-header" style="">
                    Priority
                </div>
            </div>
            <div class="input-group-text group-val">${e}</div>
        </div>
        <div class="input-group mr-sm-2 setting-group" style="height: auto !important;">
            <div class="input-group-prepend">
                <div class="input-group-text group-header" style="">
                    Is Boss
                </div>
            </div>
            <div class="input-group-text group-val">${f}</div>
        </div>
        <div class="input-group mr-sm-2 setting-group" style="height: auto !important;">
            <div class="input-group-prepend">
                <div class="input-group-text group-header" style="">
                    HP Bars
                </div>
            </div>
            <div class="input-group-text group-val">${g}</div>
        </div>
    </div>
</div>
`,ENEMY_STATS=({level:a,armorType:b,stats:c})=>`
<div class="d-flex flex-wrap flex-row" style="margin-left:0px; width:50%; align-content:flex-start;">
    <div class="d-flex flex-row setting-row">
        <div class="input-group mb-2 mr-sm-2 setting-group">
            <div class="input-group-prepend">
                <div class="input-group-text group-header stat-input-header">
                    Level
                </div>
            </div>
            <div class="input-group-text group-val">${a}</div>
        </div>
        <div class="input-group mb-2 mr-sm-2 setting-group">
            <div class="input-group-prepend">
                <div class="input-group-text group-header stat-input-header">
                    <img style="height: 25px;" src="img/attr/hp.png">
                </div>
            </div>
            <div class="input-group-text group-val">${c[EAttributes.DURABILITY]}</div>
        </div>
        <div class="input-group mb-2 mr-sm-2 setting-group">
            <div class="input-group-prepend">
                <div class="input-group-text group-header stat-input-header">
                    <img style="height: 25px;" src="img/attr/armor.png">
                </div>
            </div>
            <div class="input-group-text group-val">${EArmorType.props[b].code}</div>
        </div>
    </div>
    <div class="d-flex flex-row setting-row">
        <div class="input-group mb-2 mr-sm-2 setting-group">
            <div class="input-group-prepend">
                <div class="input-group-text group-header stat-input-header group-header-stat">
                    <img style="height: 30px;" src="img/attr/fp.png">
                </div>
            </div>
            <div class="input-group-text group-val group-val-stat">${c[EAttributes.CANNON]}</div>
        </div>

        <div class="input-group mb-2 mr-sm-2 setting-group">
            <div class="input-group-prepend">
                <div class="input-group-text group-header stat-input-header group-header-stat">
                    <img style="height: 28px;" src="img/attr/torp.png">
                </div>
            </div>
            <div class="input-group-text group-val group-val-stat">${c[EAttributes.TORP]}</div>
        </div>

        <div class="input-group mb-2 mr-sm-2 setting-group">
            <div class="input-group-prepend">
                <div class="input-group-text group-header stat-input-header group-header-stat">
                    <img style="height: 28px;" src="img/attr/air.png">
                </div>
            </div>
            <div class="input-group-text group-val group-val-stat">${c[EAttributes.AIR]}</div>
        </div>

        <div class="input-group mb-2 mr-sm-2 setting-group">
            <div class="input-group-prepend">
                <div class="input-group-text group-header stat-input-header group-header-stat">
                    <img style="height: 28px;" src="img/attr/aa.png" />
                </div>
            </div>
            <div class="input-group-text group-val group-val-stat">${c[EAttributes.AA]}</div>
        </div>

        <div class="input-group mb-2 mr-sm-2 setting-group">
            <div class="input-group-prepend">
                <div class="input-group-text group-header stat-input-header group-header-stat">
                    <img style="height: 30px;" src="img/attr/rel.png" />
                </div>
            </div>
            <div class="input-group-text group-val group-val-stat">${c[EAttributes.RELOAD]}</div>
        </div>

        <div class="input-group mb-2 mr-sm-2 setting-group">
            <div class="input-group-prepend">
                <div class="input-group-text group-header stat-input-header group-header-stat">
                    <img style="height: 25px;" src="img/attr/hit.png" />
                </div>
            </div>
            <div class="input-group-text group-val group-val-stat">${c[EAttributes.HIT]}</div>
        </div>

        <div class="input-group mb-2 mr-sm-2 setting-group">
            <div class="input-group-prepend">
                <div class="input-group-text group-header stat-input-header group-header-stat">
                    <img style="height: 25px;" src="img/attr/antisub.png" />
                </div>
            </div>
            <div class="input-group-text group-val group-val-stat">${c[EAttributes.ANTISUB]}</div>
        </div>

        <div class="input-group mb-2 mr-sm-2 setting-group">
            <div class="input-group-prepend">
                <div class="input-group-text group-header stat-input-header group-header-stat">
                    <img style="height: 28px;" src="img/attr/eva.png">
                </div>
            </div>
            <div class="input-group-text group-val group-val-stat">${c[EAttributes.EVA]}</div>
        </div>
        <div class="input-group mb-2 mr-sm-2 setting-group">
            <div class="input-group-prepend">
                <div class="input-group-text group-header stat-input-header group-header-stat">
                    <img style="height: 28px;" src="img/attr/luck.png">
                </div>
            </div>
            <div class="input-group-text group-val group-val-stat">${c[EAttributes.LUCK]}</div>
        </div>
        <div class="input-group mb-2 mr-sm-2 setting-group">
            <div class="input-group-prepend">
                <div class="input-group-text group-header stat-input-header group-header-stat">
                    Spd
                </div>
            </div>
            <div class="input-group-text group-val group-val-stat">${c[EAttributes.SPEED]}</div>
        </div>

    </div>
</div>
`,ENEMY_EXPEDS=a=>`
<div id="enemyExpeds" style="width:43%; height:100%; display:flex; flex-direction:column; justify-content:center; text-align:center; margin-left:20px;">
    <div class="input-group-text group-header" style="display:block;">Appears in</div>
    <div class="input-group-text group-val expedList">
        ${a}
    </div>
</div>
`,EXPED_ENTRY=({id:a,initName:b,icon:c,expedTypeName:d})=>`
    <a href="exped.html?id=${a}"><div style="height:25px;">${b} <img onError="this.onError=null; this.src='';" style="height:25px;" src="img/nodes/${c}.png" /> ${d}</div></a>
`,ENEMY_BREAKDOWNS=({armor:a,dmgType:b})=>`
<div style="width:50%; margin-bottom: 40px;">
    <h5>
        Breakdown by Weapon Scaling Stat
        <button type="button" style="height:40px;" class="btn btn-light" data-toggle="modal" data-target="#offenseTblAbout">
            <i class="fa fa-info-circle" aria-hidden="true"></i>
        </button>
    </h5>
    <div class="input-group mr-sm-2 setting-group" style="margin-bottom:0;">
        <div class="input-group-prepend">
            <div class="input-group-text group-header">
                <img src="img/attr/fp.png" style="width: 30px;" />
            </div>
        </div>
        <div class="input-group-text group-val" title="${(100*b[0]).toFixed(2)}%">
            <div class="progress" style="width:350px;">
                <div class="progress-bar progress-bar-striped bg-danger" role="progressbar" style="width: ${100*b[0]}%" aria-valuenow="75" aria-valuemin="0" aria-valuemax="100"></div>
            </div>
        </div>
    </div>
    <div class="input-group mr-sm-2 setting-group" style="margin-bottom:0;">
        <div class="input-group-prepend">
            <div class="input-group-text group-header">
                <img src="img/attr/torp.png" style="width: 30px;" />
            </div>
        </div>
        <div class="input-group-text group-val" title="${(100*b[1]).toFixed(2)}%">
            <div class="progress" style="width: 350px;">
                <div class="progress-bar progress-bar-striped" role="progressbar" style="width: ${100*b[1]}%" aria-valuenow="75" aria-valuemin="0" aria-valuemax="100"></div>
            </div>
        </div>
    </div>
    <div class="input-group mr-sm-2 setting-group" style="margin-bottom:0;">
        <div class="input-group-prepend">
            <div class="input-group-text group-header">
                <img src="img/attr/avp.png" style="width: 30px;" />
            </div>
        </div>
        <div class="input-group-text group-val" title="${(100*b[2]).toFixed(2)}%">
            <div class="progress" style="width: 350px;">
                <div class="progress-bar progress-bar-striped" role="progressbar" style="width: ${100*b[2]}%; background-color: #8262b3;" aria-valuenow="75" aria-valuemin="0" aria-valuemax="100"></div>
            </div>
        </div>
    </div>
    <div class="input-group mr-sm-2 setting-group" style="margin-bottom:0;">
        <div class="input-group-prepend">
            <div class="input-group-text group-header">
                <img src="img/attr/aa.png" style="width: 30px;" />
            </div>
        </div>
        <div class="input-group-text group-val" title="${(100*b[3]).toFixed(2)}%">
            <div class="progress" style="width: 350px;">
                <div class="progress-bar progress-bar-striped bg-warning" role="progressbar" style="width: ${100*b[3]}%" aria-valuenow="75" aria-valuemin="0" aria-valuemax="100"></div>
            </div>
        </div>
    </div>
</div>
<div style="width:50%; margin-bottom: 40px;">
    <h5>
        Breakdown by Armor Type
        <button type="button" style="height:40px;" class="btn btn-light" data-toggle="modal" data-target="#offenseTblAbout">
            <i class="fa fa-info-circle" aria-hidden="true"></i>
        </button>
    </h5>
    <div class="input-group mr-sm-2 setting-group" style="margin-bottom:0;">
        <div class="input-group-prepend">
            <div class="input-group-text group-header" style="min-width: 90px; text-align: center; display: block; ">
                Light
            </div>
        </div>
        <div class="input-group-text group-val" title="${(100*a[0]).toFixed(2)}%">
            <div class="progress" style="width:335px;">
                <div class="progress-bar progress-bar-striped bg-danger" role="progressbar" style="width: ${100*a[0]}%" aria-valuenow="75" aria-valuemin="0" aria-valuemax="100"></div>
            </div>
        </div>
    </div>
    <div class="input-group mr-sm-2 setting-group" style="margin-bottom:0;">
        <div class="input-group-prepend">
            <div class="input-group-text group-header" style="min-width:90px; text-align:center; display:block;">
                Medium
            </div>
        </div>
        <div class="input-group-text group-val" title="${(100*a[1]).toFixed(2)}%">
            <div class="progress" style="width: 335px;">
                <div class="progress-bar progress-bar-striped" role="progressbar" style="width: ${100*a[1]}%" aria-valuenow="75" aria-valuemin="0" aria-valuemax="100"></div>
            </div>
        </div>
    </div>
    <div class="input-group mr-sm-2 setting-group" style="margin-bottom:0;">
        <div class="input-group-prepend">
            <div class="input-group-text group-header" style="min-width: 90px; text-align: center; display: block; ">
                Heavy
            </div>
        </div>
        <div class="input-group-text group-val" title="${(100*a[2]).toFixed(2)}%">
            <div class="progress" style="width: 335px;">
                <div class="progress-bar progress-bar-striped" role="progressbar" style="width: ${100*a[2]}%; background-color: #8262b3;" aria-valuenow="75" aria-valuemin="0" aria-valuemax="100"></div>
            </div>
        </div>
    </div>
</div>
`,WEAPON_TABLE=({idx:a,margin:b,width:c,id:d,type:e,dmg:f,rof:g,coef:h,statScale:i,stat:j,range:k})=>`
<table id="weap_${a}" class="table table-striped table-bordered dataTable weaponTable" cellspacing="0" role="grid" style="width: ${c}px; margin-left: ${b}px">
    <thead>
        <tr role="row">
            <th class="th-sm" rowspan="1" colspan="1">
                ID
            </th>
            <th class="th-sm" rowspan="1" colspan="1">
                Type
            </th>
            <th class="th-sm" rowspan="1" colspan="1">
                Dmg
            </th>
            <th class="th-sm" rowspan="1" colspan="1">
                RoF
            </th>
            <th class="th-sm" rowspan="1" colspan="1">
                Coef
            </th>
            <th class="th-sm" rowspan="1" colspan="1">
                Stat
            </th>
            <th class="th-sm" rowspan="1" colspan="1">
                Stat Scaling
            </th>
            <th class="th-sm" rowspan="1" colspan="1">
                Range
            </th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td>${d}</td>
            <td>${EWeaponType.props[e].name}</td>
            <td>${f}</td>
            <td>${g}</td>
            <td>${h}%</td>
            <td><img src="img/attr/${EAttributes.props[j].icon}.png" /></td>
            <td>${i}%</td>
            <td>${k}</td>
        </tr>
    </tbody>
    <tfoot></tfoot>
</table>
`,BULLET_TABLE=({idx:a,margin:b,width:c,id:d,rows:e})=>`
<table id="bullet_${d}" class="table table-striped table-bordered dataTable weaponTable" cellspacing="0" role="grid" style="width: ${c}px;/* float: right; */margin-left: ${b}px; margin-bottom:40px;">
    <thead>
        <tr role="row">
            <th class="th-sm" rowspan="1" colspan="1">
                Rounds
            </th>
            <th class="th-sm" rowspan="1" colspan="1">
                Type
            </th>
            <th class="th-sm" rowspan="1" colspan="1">
                Ammo
            </th>
            <th class="th-sm" rowspan="1" colspan="1">
                Mods
            </th>
            <th class="th-sm" rowspan="1" colspan="1">
                Pierce
            </th>
            <th class="th-sm" rowspan="1" colspan="1">Notes</th>
        </tr>
    </thead>
    <tbody>
        ${e}
    </tbody>
    <tfoot></tfoot>
</table>
`;var EAmmo={NORMAL:1,AP:2,HE:3,TORP:4,UNK:5,UNK2:6,props:{1:{name:"Normal"},2:{name:"AP"},3:{name:"HE"},4:{name:"-"},5:{name:"-"},6:{name:"-"}}};const BULLET_ROW=({rounds:a,type:b,ammo:c,mods:d,pierce:e,notes:f})=>`
<tr>
    <td>${a}</td>
    <td>${EBulletType.props[b].name}</td>
    <td>
        ${4>c?`<img src="img/ammo/${c}.png" style="width: 20px; margin-right: 10px;">`:``}
        ${EAmmo.props[c].name}
    </td>
    <td>${Math.round(100*d[0])}/${Math.round(100*d[1])}/${Math.round(100*d[2])}</td>
    <td>${e}</td>
    <td>${f}</td>
</tr>
`,AIRCRAFT_TABLE=({id:a,icon:b,qty:c,lvl:d,dur:e,crash:f,avi:g,aa:h,hit:i,luck:j,speed:k})=>`
<table id="aircraft_${a}" class="table table-striped table-bordered dataTable weaponTable" cellspacing="0" role="grid" style="width: 950px;">
    <thead>
        <tr role="row">
            <th class="th-sm" rowspan="1" colspan="1">
                Icon
            </th>
            <th class="th-sm" rowspan="1" colspan="1">
                Qty
            </th>
            <th class="th-sm" rowspan="1" colspan="1">
                Level
            </th>
            <th class="th-sm" rowspan="1" colspan="1">
                HP
            </th>
            <th class="th-sm" rowspan="1" colspan="1">
                Crash
            </th>
            <th class="th-sm" rowspan="1" colspan="1">
                Avi
            </th>
            <th class="th-sm" rowspan="1" colspan="1">
                AA
            </th>
            <th class="th-sm" rowspan="1" colspan="1">
                Hit
            </th>
            <th class="th-sm" rowspan="1" colspan="1">
                Luck
            </th>
            <th class="th-sm" rowspan="1" colspan="1">
                Speed
            </th>
        </tr>
    </thead>
    <tbody>
        <tr>
            <td><img src="img/aircraft-icons/${b}.png" style="width:30px;"></td>
            <td>${c}</td>
            <td>${d}</td>
            <td>${e}</td>
            <td>${f}</td>
            <td>${g}</td>
            <td>${h}</td>
            <td>${i}</td>
            <td>${j}</td>
            <td>${k}</td>
        </tr>
    </tbody>
    <tfoot></tfoot>
</table>
`,BUFF_ENTRY=({type:a,desc:b})=>`
<div style="display:flex; flex-direction:row;">
    <div class="input-group-text group-header" style="width:15%; border-radius:2px;"><i class="fa fa-shield-alt" style="margin-right:10px; margin-left:3px;"></i>${a}</div>
    <div class="input-group-text group-val" style="width: 85%; border-radius: 2px;">${b}</div>
</div>
`;